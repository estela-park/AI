import numpy as np
import pandas as pd
from xgboost import XGBClassifier
from sklearn.tree import DecisionTreeClassifier
from sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier
from sklearn.datasets import load_breast_cancer
from sklearn.model_selection import train_test_split


# 1. Data-prep
dataset = load_breast_cancer()
dataset.data = pd.DataFrame(dataset.data)
# dataset.data.keys(): RangeIndex(start=0, stop=30, step=1)
dataset.data = dataset.data.drop(columns=[2,4,8,15,17,18,19,25,28,29])
x_train, x_test, y_train, y_test = train_test_split(dataset.data, dataset.target, train_size=0.8, random_state=76)


# 2. Modelling
model = XGBClassifier()


# 3. Training
model.fit(x_train, y_train)


# 4. Evaluation
score = model.score(x_test, y_test)
print('model.score:', score)
print(model.feature_importances_)


'''
            <DecisionTree>
+++ Default, before deletion
model.score: 0.9210526315789473
[0.         0.0366494  0.         0.         0.00754936 0.00786392
 0.         0.         0.00629113 0.         0.         0.0107848
 0.00629113 0.02773533 0.         0.00876265 0.01782597 0.
 0.         0.00871717 0.         0.00311923 0.12484494 0.
 0.00132445 0.         0.01749539 0.71474513 0.         0.        ]
+++ after deletion
model.score: 0.9122807017543859
[0.01592566 0.         0.01541328 0.         0.0107848  0.
 0.02773533 0.01450662 0.01782597 0.0150083  0.02384297 0.12484494
 0.01013204 0.00923497 0.71474513]
 
            <RandomForest>
+++ Default, before deletion
model.score: 0.9649122807017544
[0.05063437 0.00829399 0.05605982 0.06353556 0.00461312 0.01498027
 0.0487906  0.06841927 0.00425461 0.00502585 0.02028523 0.00469386
 0.00975868 0.03571499 0.00294918 0.00704399 0.00533658 0.00380425
 0.00435899 0.00371106 0.12056539 0.01532721 0.10779745 0.09582436
 0.01164761 0.01698218 0.03102985 0.15285686 0.01675061 0.00895421]
+++ after deletion
model.score: 0.9473684210526315
[0.02153397 0.04096244 0.02585561 0.00660238 0.04035567 0.16083106
 0.01218297 0.05108298 0.11155883 0.02142024 0.16975254 0.13610576
 0.01390897 0.02104082 0.02104428 0.1286105  0.01715098]

            <GradientBoosting>
+++ Default, before deletion
model.score: 0.9649122807017544
[4.81404435e-04 2.12969904e-02 7.35870978e-04 9.56039308e-04
 5.16280226e-04 4.02580698e-03 2.78026707e-04 8.68525340e-02
 7.89395096e-04 3.86789346e-04 4.01200585e-03 9.32900930e-04
 2.40025060e-03 2.45012720e-02 1.35833968e-03 4.81468629e-03
 1.53417382e-02 4.14505423e-04 9.23066362e-05 1.51253847e-03
 2.11878136e-01 2.58532608e-02 1.62249907e-01 1.00782241e-02
 5.56404099e-03 1.38162479e-03 1.42414859e-02 3.93352312e-01
 2.53580759e-03 1.16551951e-03]
+++ after deletion
model.score: 0.9649122807017544
[0.02038485 0.00558364 0.08461359 0.00272713 0.00352756 0.02534978
 0.00086062 0.00558568 0.00883495 0.00341064 0.21213456 0.02809864
 0.17403833 0.00862987 0.00617027 0.0010664  0.01202202 0.3932884
 0.00228451 0.00138856]

                <XGB>
+++ Default, before deletion
model.score: 0.9649122807017544
[0.0074992  0.02543402 0.         0.00661605 0.00409522 0.00726947
 0.01518556 0.11075688 0.00047757 0.01056773 0.00932646 0.0119475
 0.00917309 0.01332314 0.00527652 0.00370556 0.03510939 0.00223872
 0.00431355 0.         0.06250346 0.01565041 0.2690162  0.0170965
 0.0057191  0.00355737 0.00929143 0.3315238  0.00332602 0.        ]
+++ after deletion
model.score: 0.9298245614035088
[0.00803964 0.0341958  0.00210525 0.00493897 0.0145821  0.10892236
 0.00808099 0.01205539 0.00344704 0.         0.01263092 0.00306893
 0.00100771 0.4540102  0.01756224 0.10707802 0.01019753 0.00751939
 0.01383097 0.17672649]
'''